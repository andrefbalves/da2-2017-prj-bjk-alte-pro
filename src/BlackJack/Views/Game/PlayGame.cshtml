@model BlackJack.Models.PlayApiResponse
@using BlackJack.Models;

@{
    ViewBag.Jogo = true;
    ViewBag.BodyCLass = "Jogo";
}

<div class="container">
    <div class="row dealerrow">
        <div class="col-md-3">
            <div class="playingCards baralho">
                <ul class="deck">
                    <li><div class="card back"></div></li>
                    <li><div class="card back"></div></li>
                    <li><div class="card back"></div></li>
                    <li><div class="card back"></div></li>
                    <li><div class="card back"></div></li>
                    <li><div class="card back"></div></li>
                    <li><div class="card back"></div></li>
                    <li><div class="card back"></div></li>
                    <li><div class="card back"></div></li>
                    <li><div class="card back"></div></li>
                    <li><div class="card back"></div></li>
                    <li><div class="card back"></div></li>
                    <li><div class="card back"></div></li>
                    <li><div class="card back"></div></li>
                    <li><div class="card back"></div></li>
                </ul>
            </div>
        </div>
        <div class="col-md-7 container dealerhand">

            <div class="playingCards rotateHand faceImages">
                <ul class="table">
                    @if (Model.PlayingRound == true)
                    {
                        <li><div class="card back"></div></li>
                    }
                    @foreach (BlackJack.Models.Card card in Model.Dealerhand)
                    {
                        <li>
                            <div class="card rank-@card.GetFaceAliasMin() @card.GetSuitAliasMin()">
                                <span class="rank">@card.GetFaceAliasMin().ToUpper()</span>
                                <span class="suit">&@card.GetSuitAliasMin();</span>
                            </div>
                        </li>
                    }
                </ul>
            </div>

        </div>
        <div class="col-md-2">
            <div class="container well wellsize">
                <p><strong><span class="glyphicon glyphicon-exclamation-sign"></span>   Ronda @Model.RoundCount</strong></p>
                @if (ViewBag.Bet != null)
                {
                    <strong>Dealer:</strong> @ViewBag.DealerHand
                }
            </div>
        </div>
    </div>

    <div class="row playerrow">
        <div class="col-md-3">
            @if (Model.PlayingRound == false)
            {
                <div class="container well wellsize">
                    <h3 class="text-center">Aposta!</h3>
                    <form action="/Game/PlayGame" method="post">
                        <div class="form-group">
                            <input type="number" name="InitialBet" min="10" max="100" class="form-control center-block" required />
                        </div>
                        <div>
                            <input name="PlayerAction" value="@PlayerAction.NewRound" hidden />
                            <input name="Id" value="@Model.GameId" hidden />
                        </div>
                        <button type="submit" class="btn btn-warning center-block">Apostar</button>
                    </form>
                </div>
            }
        </div>
        <div class="col-md-7 hand">
            <div class="playingCards rotateHand faceImages">
                <ul class="table">
                    @foreach (BlackJack.Models.Card card in Model.PlayerHand)
                    {
                        <li>
                            <div class="card rank-@card.GetFaceAliasMin() @card.GetSuitAliasMin()">
                                <span class="rank">@card.GetFaceAliasMin().ToUpper()</span>
                                <span class="suit">&@card.GetSuitAliasMin();</span>
                            </div>
                        </li>
                    }
                </ul>
            </div>
        </div>
        <div class="col-md-2">

            <div class="container well wellsize">
                <p><strong><span class="glyphicon glyphicon-user"></span>   @Model.PlayerName</strong></p>
                <p><strong>Créditos:</strong> @Model.PlayerCredits</p>
                @if (ViewBag.Bet != null)
                {
                    <p><strong>Aposta:</strong> @ViewBag.Bet</p>
                    <p><strong>Pontos:</strong> @ViewBag.PlayerHand </p>
                }
            </div>
        </div>
    </div>


    <div class="row btnrow">
        @if (Model.PlayingRound == true)
            {
            <div class="col-md-2"></div>
            <div class="col-md-7">
                <div class="col-md-3">
                    <form asp-action="PlayGame" method="post">
                        <div>
                            <input name="PlayerAction" value="@PlayerAction.Hit" hidden />
                            <input name="Id" value="@Model.GameId" hidden />
                            <input name="InitialBet" value="@ViewBag.Bet" hidden />
                        </div>
                        <button type="submit" class="btn btn-success btn-large roundbtn"><span class="glyphicon glyphicon-plus"></span><strong> Hit</strong> </button>
                    </form>
                </div>
                <div class="col-md-3">
                    <form asp-action="PlayGame" method="post">
                        <div>
                            <input name="PlayerAction" value="@PlayerAction.Stand" hidden />
                            <input name="Id" value="@Model.GameId" hidden />
                            <input name="InitialBet" value="@ViewBag.Bet" hidden />
                        </div>
                        <button class="btn btn-primary btn-large roundbtn"><span class="glyphicon glyphicon-pause"></span><strong> Stand</strong></button>
                    </form>
                </div>
                <div class="col-md-3">
                    <form asp-action="PlayGame" method="post">
                        <div>
                            <input name="PlayerAction" value="@PlayerAction.Double" hidden />
                            <input name="Id" value="@Model.GameId" hidden />
                            <input name="InitialBet" value="@ViewBag.Bet" hidden />
                        </div>

                        <button class="btn btn-warning btn-large roundbtn"><span class="glyphicon glyphicon-refresh"></span><strong> Double</strong></button>
                    </form>
                </div>
                <div class="col-md-3">
                    <form asp-action="PlayGame" method="post">
                        <div>
                            <input name="PlayerAction" value="@PlayerAction.Surrender" hidden />
                            <input name="Id" value="@Model.GameId" hidden />
                            <input name="InitialBet" value="@ViewBag.Bet" hidden />
                        </div>
                        <button class="btn btn-danger btn-large roundbtn"><span class="glyphicon glyphicon-remove"></span><strong> Surrender</strong></button>
                    </form>
                </div>


            </div>
            <div class="col-md-3">  </div>
        }
        else
        {
            <div class="col-md-3"></div>
            <div class="col-md-6">
                @if (Model.RoundFinalResult == (int)RoundFinalResult.Win)
                {
                    <div class="alertwin">
                        <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>
                        <strong>Ganhaste!</strong> + @ViewBag.Bet créditos
                    </div>
                }
                else if (Model.RoundFinalResult == (int)RoundFinalResult.Lose)
                {
                    <div class="alertlose">
                        <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>
                        <strong>Perdeste!</strong> - @ViewBag.Bet créditos
                    </div>
                }
                else if (Model.RoundFinalResult == (int)RoundFinalResult.Empate)
                {
                    <div class="alertempate">
                        <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>
                        <strong>Empate!</strong>
                    </div>
                }
                else if (Model.RoundFinalResult == (int)RoundFinalResult.Surrender)
                {
                    <div class="alertsurrender">
                        <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>
                        <strong>Desististe!</strong> - @ViewBag.Result créditos
                    </div>
                }
                else if (Model.RoundFinalResult == (int)RoundFinalResult.BlackJack)
                {
                    <div class="alertblackjack">
                        <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>
                        <strong>BlackJack!</strong> + @ViewBag.Result créditos!
                    </div>
                }
            </div>
            <div class="col-md-3"></div>
        }
    </div>
</div>





